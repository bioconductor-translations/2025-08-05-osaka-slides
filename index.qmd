---
format:
  revealjs:
    incremental: false
    css: ../styles.css
execute: 
  echo: true
---

# ソフトウェア<br>カーペントリー

::: {.medlarge}

千葉大学 2024-11-25

<https://swcarpentry-ja.github.io/2024-11-25-chiba-slides/>

:::

## アウトライン

- スタッフの自己紹介
- ソフトウェアカーペントリーの紹介
- ワークショップの流れ
- アイスブレーカー

## スタッフの自己紹介 {.center}

## ニッタ ジョエル<br>（インストラクター）

::: {.columns}
::: {.column}
[`@joelnitta`](https://github.com/joelnitta/)

- 千葉大学 国際学術研究院 准教授

- 研究テーマ：シダ植物の進化、生態学、ゲノム解析

- 趣味：ジョギング
:::
::: {.column}
![](../images/joel_nitta_in_field.png){height=350px}
:::
:::

## 西田 孝三（インストラクター）

::: {.columns}
::: {.column}
- パートタイマー

- 東京農工大学 理化学研究所 等

- 研究テーマ：パスウェイ-オミクスデータ マッピング・可視化

- 趣味：オープンサイエンスコミュニティに貢献すること
:::
::: {.column}
![](http://bioconductor.org/images/cab/kozo.png)
:::
:::

## 露崎 弘毅（ヘルパー）

::: {.columns}
::: {.column}
[`@kokitsuyuzaki`](https://github.com/kokitsuyuzaki)

- 千葉大学 医学研究院 人工知能（AI）医学 特任講師

- 研究テーマ: パッケージング、（シングルセル）オミックス解析

- 趣味: サーフィン、パン作り
:::
::: {.column}
![](../images/helper_koki.jpeg){height=350px}
:::
:::

## 行動規範

どなたでも気兼ねなくワークショップに参加できるように、[行動規範](https://carpentries-coc.readthedocs.io/ja/latest/topic_folders/policies/code-of-conduct.html)があります。

行動規範に反する行為があった場合は、[インシデントレポートフォーム](https://docs.google.com/forms/d/e/1FAIpQLSeYqO37p0P-5JsEoF-E_edpZM5iRdFxWHTFqILo6LzqGS33YQ/viewform?fbzx=-8556883400541824673)で報告することができます。

## 準備

- [ソフトウェアのインストール（bash、git、R, RStudio）](https://swcarpentry-ja.github.io/2024-11-25-chiba/#setup)

- ファイルのダウンロード
  - [bash](https://swcarpentry-ja.github.io/shell-novice/#download-files)

- [ワークショップ前アンケート](https://carpentries.typeform.com/to/CvmMM8re?slug=2024-11-25-chiba)

## ソフトウェアカーペントリーの紹介 {.center}

## 問題

::: {.columns}
::: {.column width="60%"}
- 研究者は最近コードを使えざるを得ません

- ほとんどは独学で覚えます

- が、効率はあまり高くない
:::
::: {.column width="40%"}
<img src="https://2.bp.blogspot.com/-3Zik2AGqMlM/W-0gea-VWRI/AAAAAAABQKE/b0xXQ9ZeGJIOyS_1xqt_qHRmrmtOf6J7ACLcBGAs/s400/computer_typing_osoi.png" alt="drawing" height="300"/>
:::
:::

## ソフトウェアカーペントリー（SWC）の解決法

::: {.columns}
::: {.column width="60%"}
- 研究者が**コミュニティを<br>作って**、互いに教え合います

- 二日間にわたるワークショップ

- ３−４レッスンを教えます

<https://software-carpentry.org/>

:::
::: {.column width="40%"}
<img src="https://4.bp.blogspot.com/-v-d7JYMZJn0/VvKZKMuZhzI/AAAAAAAA5FQ/p8m3U0QRZ8kI8mbkOv0uMEZrwT7F5Baiw/s450/seminor_woman.png" alt="drawing" height="300"/>
:::
:::

## ワークショップ

:::: {.columns}

::: {.column width="40%"}
- 誰でも参加できます

- 無料か少額

- ワークショップを教えるのに[資格](https://carpentries.org/become-instructor/)が必要

- 改善のためのフィードバックは重視されています
:::

::: {.column width="60%"}
![](https://mablab.org/img/post/2018-04-24_dcapril_s.jpg)

:::

::::

---

### 世界各国で実施

![](https://feeds.carpentries.org/plot_workshops_map.svg)

## 日本ではまだ始まったばかり

- 今回が**第2回目**対面日本語ワークショップ
  - これから増やす予定

- 翻訳活動も行っています

## 参加者大募集中!

- Slack

  - <https://slack-invite.carpentries.org/>から Slack に参加後、 `#local-japan` チャンネルに入って下さい

- GitHub: <https://swcarpentry-ja.github.io/>

## ワークショップの流れ {.center}

## 内容

- 25日：[Shell](https://swcarpentry-ja.github.io/shell-novice)、[Git](https://swcarpentry-ja.github.io/git-novice)

- 26日：[R](https://swcarpentry-ja.github.io/r-novice-gapminder/)

上記のリンクからレッスンの内容にアクセスできます<br>（ChatGPTによる翻訳が含まれています）

## SWCワークショップの流れ

- （軽い）スライドによる内容の説明

- **ライブコーディング**

## ライブコーディングとは？

::: {.columns}
::: {.column}
- インストラクターが打っていると同じコードを同時に**自分のパソコンで<br>打っていく**

- そのコードを**理解すること**を最も優先して下さい<br>（メモをとるなどよりも）
:::
::: {.column}
![](images/chiba_swc_2024-05-30.png)
:::
:::

## ライブコーディングとは？ {.smaller}

::: {.columns}
::: {.column}
- インストラクターが参加者の理解を<br>確認する（「〜が出来ましたか？」）

- うまく出来ていれば、**緑付箋**を<br>ラップトップにつけて下さい

- 何か困っているときは、**赤付箋**を<br>ラップトップにつけて下さい
  - ヘルパーが助けに行きます
:::
::: {.column}
![](https://carpentries.github.io/instructor-training/fig/Scene_1_blue_stickies_labeled.jpeg)
:::
:::

---

<br><br>

インストラクターが聞かなくても、何か問題があった時に**声をかけて下さい**（あるいは、赤い付箋を貼ってください）

## コラボレイティブ・ノート

[Etherpad](https://pad.carpentries.org/2024-11-25-chiba)にコードを貼っておきます。

- もしインストラクターが進んで、コードが見えなくなったら、Etherpadのメモを参照して下さい。
  - 参加者もご自由に書き込んでください

## フィードバックの種類

- 感想（１日の終わりに付箋に書いていただく）

- ワークショップ前後の[アンケート](https://carpentries.typeform.com/to/CvmMM8re?slug=2024-11-25-chiba)

## アイスブレーカー

隣の方に自己紹介しましょう

- 研究テーマは何ですか？

- 趣味は何ですか？

# Unixシェル

## データの準備

- [shell-lesson-data.zip](https://swcarpentry.github.io/shell-novice/data/shell-lesson-data.zip)をダウンロードして、ファイルをデスクトップに移動してください。

- ファイルを解凍します。**デスクトップに`shell-lesson-data`という新しいフォルダが作成されているはずです。**

## 人間とコンピュータの相互作用

- 人間は**GUI**（グラフィカルユーザインターフェース）または**CLI**（コマンドラインインターフェース）を使ってコンピュータと**対話**します。

- **GUI**: 直感的でメニュー駆動型ですが、反復作業には効率的ではありません。

- **CLI**（Unixシェル）: 反復作業に効率的で、タスクを迅速に自動化できます。

---

- シェルはユーザーが入力したコマンドを**解釈**して**実行**します。

- 人気のあるUnixシェル: **Bash**（**B**ourne **A**gain **SH**ell）。

- シェルを使用する利点:
  - 反復作業を自動化
  - 強力なパイプラインで効率的なデータ処理
  - リモートマシンとのやり取りや高性能コンピューティングに不可欠

---

- 今日は**コマンド**を使ってシェルと対話する方法を学びます

## Nelleのパイプライン

- サンプルデータセットは"Nelle Nemo"のストーリーに基づいています

- Nelle Nemoは海洋生物学者で、海洋生物をサンプリングしています。

- Nelleのタスク: `goostats.sh`を使って1520のサンプルのタンパク質量を測定します。

- 課題: GUIを使用する場合、Nelleは1520のファイルを手動で実行する必要があり、12時間以上かかります。**Nelleはシェルを使ってこれをより効率的に行うことができるでしょうか？**

---

![](https://swcarpentry.github.io/shell-novice/fig/filesystem.svg)


---

![](https://swcarpentry.github.io/shell-novice/fig/home-directories.svg)

## チャレンジ: `ls` {.smaller}

:::: {.columns}

::: {.column width="50%"}
`pwd`が`/Users/backup`を表示し、`-r`が`ls`に逆順で表示するよう指示する場合、**次の出力を得るにはどのコマンドを使用しますか:**

```bash
pnas_sub/ pnas_final/ original/
```

1. `ls pwd`
1. `ls -r -F`
1. `ls -r -F /Users/backup`
:::

::: {.column width="50%"}
![](https://swcarpentry.github.io/shell-novice/fig/filesystem-challenge.svg)
:::

::::

## チャレンジ: 相対パス {.smaller}

:::: {.columns}

::: {.column width="50%"}

`pwd`が`/Users/thing`を表示している場合、**`ls -F ../backup`は何を表示しますか？**

1. `../backup: No such file or directory`
1. `2012-12-01 2013-01-08 2013-01-27`
1. `2012-12-01/ 2013-01-08/ 2013-01-27/`
1. `original/ pnas_final/ pnas_sub/`

:::

::: {.column width="50%"}
![](https://swcarpentry.github.io/shell-novice/fig/filesystem-challenge.svg)
:::
::::
